version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: support_web
    ports:
      - "5001:5001"
    environment:
      - SECRET_KEY=${SECRET_KEY:-change-me}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg2://support:support@db:5432/support}
      - FLASK_ENV=${FLASK_ENV:-production}
      - PORT=${PORT:-5001}
      # Optional initial admin auto-create on first run
      - ADMIN_AUTO_CREATE=${ADMIN_AUTO_CREATE:-false}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME:-Admin}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME:-User}
    volumes:
      - support_instance:/app/instance
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5001/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      - db
    restart: unless-stopped

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: support_bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - SUPPORT_GROUP_ID=${SUPPORT_GROUP_ID:-}
      - FORWARD_SUPPORT_TO_GROUP=${FORWARD_SUPPORT_TO_GROUP:-false}
      - WEB_DASHBOARD_URL=${WEB_DASHBOARD_URL:-http://web:5001}
      - ESCALATION_TIMEOUT=${ESCALATION_TIMEOUT:-900}
      - SECRET_KEY=${SECRET_KEY:-change-me}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg2://support:support@db:5432/support}
      - WEB_WAIT_TIMEOUT=${WEB_WAIT_TIMEOUT:-60}
    depends_on:
      - web
      - db
    volumes:
      - support_instance:/app/instance
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: support_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-support}
      - POSTGRES_USER=${POSTGRES_USER:-support}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-support}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

volumes:
  support_instance:
  postgres_data:
